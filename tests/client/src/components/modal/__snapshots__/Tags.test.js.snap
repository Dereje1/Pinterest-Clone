// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The tags component will render a list item 1`] = `
<ContextProvider
  value={
    {
      "insert": [Function],
      "inserted": {},
      "key": "css",
      "nonce": undefined,
      "registered": {},
      "sheet": StyleSheet {
        "_insertTag": [Function],
        "before": null,
        "container": undefined,
        "ctr": 0,
        "insertionPoint": undefined,
        "isSpeedy": false,
        "key": "css",
        "nonce": undefined,
        "prepend": undefined,
        "tags": [],
      },
    }
  }
>
  <Insertion
    cache={
      {
        "insert": [Function],
        "inserted": {},
        "key": "css",
        "nonce": undefined,
        "registered": {},
        "sheet": StyleSheet {
          "_insertTag": [Function],
          "before": null,
          "container": undefined,
          "ctr": 0,
          "insertionPoint": undefined,
          "isSpeedy": false,
          "key": "css",
          "nonce": undefined,
          "prepend": undefined,
          "tags": [],
        },
      }
    }
    isStringTag={true}
    serialized={
      {
        "map": undefined,
        "name": "1kxrbkv",
        "next": undefined,
        "styles": "margin:4px;",
        "toString": [Function],
      }
    }
  />
  <li
    className="css-1kxrbkv"
  />
</ContextProvider>
`;

exports[`The tags component will render with tags for non-owner 1`] = `
<div
  style={
    {
      "alignItems": "center",
      "display": "flex",
      "justifyContent": "space-between",
    }
  }
>
  <ForwardRef(Paper)
    component="ul"
    elevation={0}
    sx={
      {
        "display": "flex",
        "flexWrap": "wrap",
        "justifyContent": "center",
        "listStyle": "none",
        "m": 1,
        "p": 0.5,
      }
    }
  >
    <Styled(li)
      key="tag_id_1"
    >
      <ForwardRef(Chip)
        color="warning"
        label="TAG 1"
        onClick={[Function]}
        size="small"
        variant="outlined"
      />
    </Styled(li)>
    <Styled(li)
      key="tag_id_2"
    >
      <ForwardRef(Chip)
        color="warning"
        label="TAG 2"
        onClick={[Function]}
        size="small"
        variant="outlined"
      />
    </Styled(li)>
  </ForwardRef(Paper)>
  <div
    style={
      {
        "marginRight": 3,
      }
    }
  />
</div>
`;

exports[`The tags component will render with tags for owner 1`] = `
<div
  style={
    {
      "alignItems": "center",
      "display": "flex",
      "justifyContent": "space-between",
    }
  }
>
  <ForwardRef(Paper)
    component="ul"
    elevation={0}
    sx={
      {
        "display": "flex",
        "flexWrap": "wrap",
        "justifyContent": "center",
        "listStyle": "none",
        "m": 1,
        "p": 0.5,
      }
    }
  >
    <Styled(li)
      key="tag_id_1"
    >
      <ForwardRef(Chip)
        color="warning"
        label="TAG 1"
        onClick={[Function]}
        onDelete={[Function]}
        size="small"
        variant="outlined"
      />
    </Styled(li)>
    <Styled(li)
      key="tag_id_2"
    >
      <ForwardRef(Chip)
        color="warning"
        label="TAG 2"
        onClick={[Function]}
        onDelete={[Function]}
        size="small"
        variant="outlined"
      />
    </Styled(li)>
  </ForwardRef(Paper)>
  <div
    style={
      {
        "marginRight": 3,
      }
    }
  >
    <ForwardRef(IconButton)
      disabled={false}
      onClick={[Function]}
    >
      <Memo(ForwardRef(TagIcon)) />
    </ForwardRef(IconButton)>
  </div>
</div>
`;
