// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Handling zoomed image action buttons will render the delete button for owners 1`] = `
<ForwardRef(IconButton)
  aria-label="settings"
  onClick={[Function]}
  onMouseDown={[Function]}
  style={
    Object {
      "margin": "1vh",
    }
  }
>
  <ForwardRef(Tooltip)
    placement="bottom"
    title="Permanently delete image"
  >
    <Memo(ForwardRef(DeleteForeverIcon))
      style={
        Object {
          "color": "#d12929",
          "fontSize": "2em",
        }
      }
    />
  </ForwardRef(Tooltip)>
</ForwardRef(IconButton)>
`;

exports[`Handling zoomed image action buttons will render the delete button for pinned images 1`] = `
<ForwardRef(IconButton)
  aria-label="settings"
  onClick={[Function]}
  onMouseDown={[Function]}
  style={
    Object {
      "margin": "1vh",
    }
  }
>
  <ForwardRef(Tooltip)
    placement="bottom"
    title="Unpin image"
  >
    <Memo(ForwardRef(PushPinIcon))
      style={
        Object {
          "color": "#3a1c1cde",
          "fontSize": "2em",
        }
      }
    />
  </ForwardRef(Tooltip)>
</ForwardRef(IconButton)>
`;

exports[`Handling zoomed image action buttons will render the disabled pin button for already owned images 1`] = `
<ForwardRef(IconButton)
  aria-label="settings"
  disableRipple={true}
  onClick={null}
  onMouseDown={[Function]}
  style={
    Object {
      "margin": "1vh",
    }
  }
>
  <ForwardRef(Tooltip)
    placement="bottom"
    title="You own this image"
  >
    <Memo(ForwardRef(PushPinIcon))
      style={
        Object {
          "color": "#c50000",
          "fontSize": "2em",
        }
      }
    />
  </ForwardRef(Tooltip)>
</ForwardRef(IconButton)>
`;

exports[`Handling zoomed image action buttons will render the pin button for unpinned images 1`] = `
<ForwardRef(IconButton)
  aria-label="settings"
  onClick={[Function]}
  onMouseDown={[Function]}
  style={
    Object {
      "margin": "1vh",
    }
  }
>
  <ForwardRef(Tooltip)
    placement="bottom"
    title="Pin image"
  >
    <Memo(ForwardRef(PushPinOutlinedIcon))
      style={
        Object {
          "fontSize": "2em",
        }
      }
    />
  </ForwardRef(Tooltip)>
</ForwardRef(IconButton)>
`;

exports[`Handling zoomed image action buttons will render the unpin button for already pinned images 1`] = `
<ForwardRef(IconButton)
  aria-label="settings"
  disableRipple={false}
  onClick={[Function]}
  onMouseDown={[Function]}
  style={
    Object {
      "margin": "1vh",
    }
  }
>
  <ForwardRef(Tooltip)
    placement="bottom"
    title="Unpin this image"
  >
    <Memo(ForwardRef(PushPinIcon))
      style={
        Object {
          "color": "#3a1c1cde",
          "fontSize": "2em",
        }
      }
    />
  </ForwardRef(Tooltip)>
</ForwardRef(IconButton)>
`;
