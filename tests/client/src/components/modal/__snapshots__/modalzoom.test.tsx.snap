// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The pin zoom modal will render 1`] = `
<Fragment>
  <div
    className="modal-overlay"
  />
  <ForwardRef(Card)
    className="zoom cshow"
    onBlur={[Function]}
    sx={
      {
        "top": 10,
        "width": 622.5,
      }
    }
    tabIndex={0}
  >
    <ForwardRef(CardHeader)
      action={
        <React.Fragment>
          <Styled(ForwardRef(Badge))
            badgeContent={1}
            color="primary"
            name="comments"
            showZero={true}
          >
            <ForwardRef(IconButton)
              onClick={[Function]}
              onMouseDown={[Function]}
            >
              <Memo
                style={
                  {
                    "fontSize": "1.7em",
                  }
                }
              />
            </ForwardRef(IconButton)>
          </Styled(ForwardRef(Badge))>
          <Styled(ForwardRef(Badge))
            badgeContent={2}
            color="secondary"
            name="pin"
            showZero={true}
          >
            <GetAction
              deletePin={null}
              element={
                {
                  "_id": "1",
                  "comments": [
                    {
                      "_id": "Comment_id_1",
                      "comment": "Test comment",
                      "createdAt": "2021-07-28T16:30:48.572Z",
                      "displayName": "tester-displayName",
                      "userId": "Comment_User_Id_1",
                    },
                  ],
                  "createdAt": "2020-12-25T00:00:00.000+00:00",
                  "hasSaved": false,
                  "imgDescription": "imgDescription id-1",
                  "imgLink": "imgLink id-1",
                  "owner": {
                    "name": "owner id-1",
                    "service": "google",
                    "userId": "1",
                  },
                  "owns": false,
                  "savedBy": [
                    {
                      "name": "savedBy - id-1",
                      "service": "google",
                      "userId": "1",
                    },
                    {
                      "name": "savedBy - id-1",
                      "service": "github",
                      "userId": "1",
                    },
                  ],
                  "tags": [
                    {
                      "_id": "tag_id_1",
                      "tag": "tag 1",
                    },
                    {
                      "_id": "tag_id_2",
                      "tag": "tag 2",
                    },
                  ],
                }
              }
              pinImage={[MockFunction]}
              reset={[Function]}
            />
          </Styled(ForwardRef(Badge))>
        </React.Fragment>
      }
      subheader={
        <React.Fragment>
          <ProfileLink
            authenticated={true}
            closePin={[Function]}
            displayLogin={[MockFunction]}
            title="owner id-1"
            userId="1"
          />
          <br />
          <span
            style={
              {
                "marginLeft": 0,
              }
            }
          >
            25 Dec 2020
          </span>
        </React.Fragment>
      }
      subheaderTypographyProps={
        {
          "fontWeight": "bold",
        }
      }
      title="imgDescription ..."
      titleTypographyProps={
        {
          "fontWeight": "bold",
        }
      }
    />
    <ForwardRef(CardContent)
      sx={
        {
          "&:last-child": {
            "pb": 0,
          },
          "background": "",
          "padding": 0,
        }
      }
    >
      <ForwardRef(CardMedia)
        component="img"
        id="pin-zoom"
        image="imgLink id-1"
        sx={
          {
            "marginLeft": "auto",
            "marginRight": "auto",
            "width": "622.5px",
          }
        }
      />
    </ForwardRef(CardContent)>
  </ForwardRef(Card)>
</Fragment>
`;

exports[`The styled badge Will render for comments 1`] = `
<ForwardRef(Badge)
  className="ForwardRef(Badge)-root-1 ForwardRef(Badge)-root-3"
  name="comments"
/>
`;

exports[`The styled badge Will render for pins 1`] = `
<ForwardRef(Badge)
  className="ForwardRef(Badge)-root-1 ForwardRef(Badge)-root-2"
  name="pin"
/>
`;
