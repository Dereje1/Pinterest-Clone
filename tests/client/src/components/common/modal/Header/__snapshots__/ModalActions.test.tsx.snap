// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Handling zoomed image action buttons will render the delete button for owners 1`] = `
<ForwardRef(Tooltip)
  placement="bottom"
  title="Permanently delete image"
>
  <ForwardRef(IconButton)
    aria-label="settings"
    onClick={[Function]}
    onMouseDown={[Function]}
    style={
      {
        "margin": "1vh",
      }
    }
  >
    <Memo(ForwardRef(DeleteForeverIcon))
      style={
        {
          "color": "#d12929",
          "fontSize": "2em",
        }
      }
    />
  </ForwardRef(IconButton)>
</ForwardRef(Tooltip)>
`;

exports[`Handling zoomed image action buttons will render the delete button for pinned images 1`] = `
<ForwardRef(Tooltip)
  placement="bottom"
  title="Unpin image"
>
  <ForwardRef(IconButton)
    aria-label="settings"
    onClick={[Function]}
    onMouseDown={[Function]}
    style={
      {
        "margin": "1vh",
      }
    }
  >
    <Memo(ForwardRef(PushPinIcon))
      style={
        {
          "color": "#3a1c1cde",
          "fontSize": "2em",
        }
      }
    />
  </ForwardRef(IconButton)>
</ForwardRef(Tooltip)>
`;

exports[`Handling zoomed image action buttons will render the disabled pin button for already owned images 1`] = `
<ForwardRef(Tooltip)
  placement="bottom"
  title="You own this image"
>
  <ForwardRef(IconButton)
    aria-label="settings"
    disableRipple={true}
    onClick={[Function]}
    onMouseDown={[Function]}
    style={
      {
        "margin": "1vh",
      }
    }
  >
    <Memo(ForwardRef(PushPinIcon))
      style={
        {
          "color": "#c50000",
          "fontSize": "2em",
        }
      }
    />
  </ForwardRef(IconButton)>
</ForwardRef(Tooltip)>
`;

exports[`Handling zoomed image action buttons will render the pin button for unpinned images 1`] = `
<ForwardRef(Tooltip)
  placement="bottom"
  title="Pin image"
>
  <ForwardRef(IconButton)
    aria-label="settings"
    onClick={[Function]}
    onMouseDown={[Function]}
    style={
      {
        "margin": "1vh",
      }
    }
  >
    <Memo(ForwardRef(PushPinOutlinedIcon))
      style={
        {
          "fontSize": "2em",
        }
      }
    />
  </ForwardRef(IconButton)>
</ForwardRef(Tooltip)>
`;

exports[`Handling zoomed image action buttons will render the unpin button for already pinned images 1`] = `
<ForwardRef(Tooltip)
  placement="bottom"
  title="Unpin this image"
>
  <ForwardRef(IconButton)
    aria-label="settings"
    disableRipple={false}
    onClick={[Function]}
    onMouseDown={[Function]}
    style={
      {
        "margin": "1vh",
      }
    }
  >
    <Memo(ForwardRef(PushPinIcon))
      style={
        {
          "color": "#3a1c1cde",
          "fontSize": "2em",
        }
      }
    />
  </ForwardRef(IconButton)>
</ForwardRef(Tooltip)>
`;
